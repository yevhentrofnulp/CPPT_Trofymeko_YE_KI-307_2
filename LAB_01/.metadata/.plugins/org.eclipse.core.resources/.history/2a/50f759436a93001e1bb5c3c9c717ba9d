/**
* Клас для створення та обробки квадратної матриці з рівномірним розташуванням символів.
*/
package main;
import java.io.*;
import java.util.Arrays;
import java.util.Scanner;
/**
* Клас для створення та обробки квадратної матриці...
*/
public class Lab1Class {
/**
* Конструктор за замовченням
*/
public Lab1Class() {
}
/**
* Сканер для вводу даних з консолі
*/
private static final Scanner scanner = new Scanner(System.in);
/**
* Основний метод класу
* @param args командні параметри
* @throws FileNotFoundException якщо не вдасться знайти заданий файл
* Генерує квадратну матрицю з обраного розміру та заповнює її символом.
* Виводить матрицю у консоль та зберігає у файл.
*/
public static void main(String[] args) throws FileNotFoundException {
    System.out.print("Введіть розмір квадратної матриці: ");
 // Введення розміру матриці
    int sideLength = scanner.nextInt();
    scanner.nextLine();
  //Ініціалізація масиву
    char[][] arr = new char[sideLength][];
    for(int i=1 ; i <= sideLength/2; i++ )
    {
    arr[i-1]=new char[i];
    arr[i-1+(sideLength/2)]= new char[i];
    }

    if(arr.length % 2 == 1)
    arr[arr.length - 1] = new char[sideLength / 2 + 1];

    System.out.print("Введіть символ-заповнювач: ");
    String symbol = scanner.next();
  //Заповнити масив зображенням за алгоритмом
    for (int i = 0; i < sideLength; ++i)
    // Заповнення матриці
    Arrays.fill(arr[i], symbol.charAt(0));

 // Выведение данных в консоль
    for (int i = 0; i < sideLength; i++) {
        if (i >= sideLength / 2) {
            System.out.print(String.format("%" + (sideLength / 2) + "s", ""));
        }
        System.out.println(String.copyValueOf(arr[i]));
    }

    //Виведення даних у файл
    try(FileWriter fileWriter = new FileWriter("Result.txt")) {
    for(int i=0; i< sideLength; i++)
    {
    if(i>=sideLength/2)
    {
    fileWriter.write(String.format("%0" + sideLength/2 + "d", 0).replace('0', ' '));
    }
    fileWriter.write( String.copyValueOf(arr[i]));
    }
    System.out.println("Дані було успішно збережено у файлі.");
    } catch (IOException e) {
    throw new RuntimeException(e);
    }
    }
    }